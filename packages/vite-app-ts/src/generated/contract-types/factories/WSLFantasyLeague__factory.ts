/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WSLFantasyLeague,
  WSLFantasyLeagueInterface,
} from "../WSLFantasyLeague";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "firstTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "secondTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "thirdTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "firstWinnings",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "secondWinnings",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "thirdWinnings",
        type: "uint256",
      },
    ],
    name: "CompSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "championTokenId",
        type: "uint256",
      },
    ],
    name: "LeagueSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COMPETITION_SHARE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NUM_COMPETITIONS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHARE_FOR_FIRST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHARE_FOR_SECOND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHARE_FOR_THIRD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buySurfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateCompetitionWinnings",
    outputs: [
      {
        internalType: "uint256",
        name: "firstsWinnings",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsWinnings",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thirdsWinnings",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasBeenSettled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numUnsettledCompetitions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "firstTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "thirdTokenId",
        type: "uint256",
      },
    ],
    name: "settleCompetition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "championTokenId",
        type: "uint256",
      },
    ],
    name: "settleLeague",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wslNFT",
    outputs: [
      {
        internalType: "contract WSLNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class WSLFantasyLeague__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    nftContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WSLFantasyLeague> {
    return super.deploy(
      nftContractAddress,
      overrides || {}
    ) as Promise<WSLFantasyLeague>;
  }
  getDeployTransaction(
    nftContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(nftContractAddress, overrides || {});
  }
  attach(address: string): WSLFantasyLeague {
    return super.attach(address) as WSLFantasyLeague;
  }
  connect(signer: Signer): WSLFantasyLeague__factory {
    return super.connect(signer) as WSLFantasyLeague__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WSLFantasyLeagueInterface {
    return new utils.Interface(_abi) as WSLFantasyLeagueInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WSLFantasyLeague {
    return new Contract(address, _abi, signerOrProvider) as WSLFantasyLeague;
  }
}
